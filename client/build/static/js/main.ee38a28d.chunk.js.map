{"version":3,"sources":["api/index.js","redux/actions/notificationsAction.js","redux/actions/postsAction.js","helpers/PrivateRoute.js","redux/actions/userAction.js","styles/variables/deviceBreakpoints.js","styles/common/index.js","components/Auth/LoginForm/Login.styles.js","components/Auth/LoginForm/index.js","pages/Auth/Login.js","components/Auth/SignUpForm/index.js","pages/Auth/SignUp.js","components/SinglePost/SinglePost.styles.js","components/SinglePost/SinglePost.js","pages/Posts/Post.js","components/Common/Inputs/FormItem.js","components/Common/Inputs/ImgInput.styles.js","components/Common/Inputs/ImgInput.js","components/PostForm/PostForm.js","components/Common/RightDrawer/RightDrawer.js","components/Navbar/Navbar.styles.js","components/Navbar/Navbar.js","components/PostCards/PostCard.js","components/PostCards/PostCards.styles.js","components/PostCards/PostCards.js","pages/Posts/Posts.js","router/index.js","App.js","redux/reducers/notificationsReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/reducers/postsReducer.js","index.js"],"names":["API","require","create","baseURL","interceptors","request","use","req","token","JSON","parse","localStorage","getItem","headers","Authorization","createUserApi","formData","post","loginUserApi","SHOW_NOTIFICATION","showNotification","data","type","payload","CREATE_POST","DELETE_POST","FETCH_ALL_POST","UPDATE_POST","PrivateRoute","children","rest","user","useSelector","state","render","location","to","pathname","from","Add_LOGIN_USER","LOGOUT","breakpoints","mobile","tablet","tabletL","laptop","laptopL","device","desktop","Container","styled","section","backgroundColor","PaddingContainer","FormContainer","header","LoginForm","history","useHistory","useState","loading","setLoading","dispatch","useDispatch","name","className","initialValues","remember","onFinish","values","a","console","log","massageType","message","userInfo","push","response","loginAccount","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","htmlType","style","color","Login","SignUpForm","createAccount","SignUp","SinglePostContainer","SinglePost","categories","disruption","createdAt","image","title","userId","src","alt","Post","id","useParams","thisIdPost","posts","find","_id","FormItem","label","help","value","onBlur","defaultValue","ImageInput","div","ImgInput","priviesImage","handelBlur","setImage","class","onChange","e","img","body","FormData","set","append","axios","method","url","uploadImage","target","files","then","resp","preventDefault","height","width","objectFit","marginBottom","display","PostForm","Input","TextArea","onClose","inputValue","setInputValue","layout","postInfo","newPost","createPost","onFinishFailed","errorInfo","input","rows","RightDrawer","content","visible","setVisible","onClick","placement","NavbarContainer","Navbar","PostCard","Card","Meta","hoverable","boxShadow","borderRadius","cover","PostCardContainer","PostCards","map","Posts","routes","path","Component","exact","ComponentRoute","Route","Router","App","currentId","useEffect","get","notificationState","notificationReducer","action","notification","description","initialState","email","isAdmin","reducers","combineReducers","filter","notifications","setItem","stringify","profile","store","createStore","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ee38a28d.chunk.js","sourcesContent":["const axios = require(\"axios\");\r\n\r\nconst API = axios.create({ baseURL: \"https://curd-post.herokuapp.com/\" });\r\n// const API = axios.create({ baseURL: \"http://localhost:4000\" });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  const token = JSON.parse(localStorage.getItem(\"profile\"))?.token;\r\n  if (token) {\r\n    req.headers.Authorization = `bearer ${token}`;\r\n  }\r\n  return req;\r\n});\r\n//auth\r\nexport const createUserApi = (formData) => API.post(`/auth/sineUp`, formData);\r\n\r\nexport const loginUserApi = (formData) => API.post(`/auth/login`, formData);\r\n\r\n//posts\r\nexport const fetchPosts = () => API.get(`/posts`);\r\n\r\nexport const createPost = (newPost) => API.post(`/posts`, newPost);\r\n\r\nexport const updatePost = (id, updatedPost) =>\r\n  API.patch(`/posts/${id}`, updatedPost);\r\n\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\n","export const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION'\r\nexport const SHOW_MESSAGE = 'SHOW_MESSAGE'\r\nexport const SHOW_MODAL = 'SHOW_MODAL'\r\n\r\nexport const showNotification = data => {\r\n  return {\r\n    type: SHOW_NOTIFICATION,\r\n    payload: data,\r\n  }\r\n}\r\n\r\n\r\n","import * as api from \"../../api/index.js\";\r\nimport { showNotification } from \"./notificationsAction.js\";\r\n\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const FETCH_ALL_POST = \"FETCH_ALL_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({ type: FETCH_ALL_POST, payload: data });\r\n  } catch (error) {\r\n    dispatch(\r\n      showNotification({\r\n        message: error.message,\r\n        massageType: \"error\",\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const createPost = (postInfo,setLoading,onClose) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(postInfo);\r\n    dispatch(\r\n      showNotification({\r\n        massageType: \"success\",\r\n        message: \"Post created successfully\",\r\n      })\r\n    );\r\n    dispatch({ type: CREATE_POST, payload: data });\r\n    setLoading(false)\r\n    onClose()\r\n  } catch (error) {\r\n    dispatch(\r\n      showNotification({\r\n        message: error.message,\r\n        massageType: \"error\",\r\n      })\r\n    );\r\n    setLoading(false)\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch(\r\n      showNotification({\r\n        massageType: \"success\",\r\n        message: \"Post Updated successfully\",\r\n      })\r\n    );\r\n    dispatch({ type: UPDATE_POST, payload: data });\r\n  } catch (error) {\r\n    dispatch(\r\n      showNotification({\r\n        message: error.message,\r\n        massageType: \"error\",\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await await api.deletePost(id);\r\n    dispatch(\r\n      showNotification({\r\n        massageType: \"success\",\r\n        message: \"Post Delete successfully\",\r\n      })\r\n    );\r\n    dispatch({ type: DELETE_POST, payload: id });\r\n  } catch (error) {\r\n    dispatch(\r\n      showNotification({\r\n        message: error.message,\r\n        massageType: \"error\",\r\n      })\r\n    );\r\n  }\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const user = useSelector((state) => state.user?.token);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        user ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/auth/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\nexport default PrivateRoute;\r\n","import { createUserApi, loginUserApi } from \"../../api\";\r\nimport { showNotification } from \"./notificationsAction\";\r\n\r\nexport const Add_LOGIN_USER = \"Add_LOGIN_USER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const createAccount =\r\n  (formData, setLoading, history) => async (dispatch) => {\r\n    try {\r\n      const { data } = await createUserApi(formData);\r\n      dispatch({ type: Add_LOGIN_USER, payload: data });\r\n      dispatch(\r\n        showNotification({\r\n          massageType: \"success\",\r\n          message: \"Account created successfully\",\r\n        })\r\n      );\r\n      setLoading(false);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      dispatch(\r\n        showNotification({\r\n          message: error?.response?.data?.message,\r\n          massageType: \"error\",\r\n        })\r\n      );\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\nexport const loginAccount =\r\n  (formData, setLoading, history) => async (dispatch) => {\r\n    try {\r\n      const { data } = await loginUserApi(formData);\r\n      console.log(\"🚀 ~ file: actions.js ~ line 34 ~ data\", data);\r\n      dispatch({ type: Add_LOGIN_USER, payload: data });\r\n      dispatch(\r\n        showNotification({\r\n          massageType: \"success\",\r\n          message: `welcome ${data.userInfo.name}`,\r\n        })\r\n      );\r\n      setLoading(false);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      dispatch(\r\n        showNotification({\r\n          message: error?.response?.data?.message,\r\n          massageType: \"error\",\r\n        })\r\n      );\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n  localStorage.setItem(\"profile\", \"null\");\r\n  dispatch(\r\n    showNotification({\r\n      message: \"Log Out Successful\",\r\n      massageType: \"success\",\r\n    })\r\n  );\r\n  dispatch({\r\n    type: LOGOUT,\r\n    payload: {\r\n      token: null,\r\n      userInfo: {\r\n        id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        isAdmin: false,\r\n      },\r\n    },\r\n  });\r\n};\r\n","export const breakpoints = {\r\n    mobile: \"576px\",\r\n    tablet: \"768px\",\r\n    tabletL: \"992px\",\r\n    laptop: \"1200px\",\r\n    laptopL: \"1440px\",\r\n  };\r\n\r\n  export const device = {\r\n    mobile: `screen and (min-width: ${breakpoints.mobile})`,\r\n    tablet: `screen and (min-width: ${breakpoints.tablet})`,\r\n    tabletL: `screen and (min-width: ${breakpoints.tabletL})`,\r\n    laptop: `screen and (min-width: ${breakpoints.laptop})`,\r\n    laptopL: `screen and (min-width: ${breakpoints.laptopL})`,\r\n    desktop: `screen and (min-width: ${breakpoints.desktop})`,\r\n  };\r\n  ","import styled from \"styled-components\";\r\nimport { device } from \"../variables/deviceBreakpoints\";\r\n\r\nexport const Container = styled.section`\r\n  max-width: 100vw;\r\n  padding: 0 15px;\r\n  margin: 0 auto;\r\n  background-color: ${({ backgroundColor }) => backgroundColor};\r\n\r\n  @media ${device.mobile} {\r\n    max-width: 540px;\r\n    width: 100%;\r\n  }\r\n  @media ${device.tablet} {\r\n    max-width: 720px;\r\n  }\r\n  @media ${device.tabletL} {\r\n    max-width: 960px;\r\n  }\r\n  @media ${device.laptop} {\r\n    max-width: 1199px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const PaddingContainer = styled.section`\r\n  padding-top: 40px;\r\n  padding-bottom: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding-top: 60px;\r\n    padding-bottom: 40px;\r\n  }\r\n\r\n  @media ${device.tabletL} {\r\n    padding-top: 80px;\r\n    padding-bottom: 70px;\r\n  }\r\n`;\r\n\r\nexport const CardContainer = styled.section`\r\n  @media ${device.tablet} {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    justify-content: center;\r\n  }\r\n  @media ${device.tabletL} {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../../styles/variables/deviceBreakpoints\";\r\n\r\nexport const FormContainer = styled.header`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 75vh;\r\n    max-width: 800px;\r\n    background-color: #5D3485;\r\n    margin: 0 auto;\r\n    padding: 5px;\r\n    \r\n    @media ${device.tablet} {\r\n        padding: 40px;\r\n    }\r\n     \r\n`;\r\n","import { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { loginAccount } from \"../../../redux/actions/userAction\";\r\nimport { Container } from \"../../../styles/common\";\r\nimport { FormContainer } from \"./Login.styles\";\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    setLoading(true);\r\n    dispatch(loginAccount(values, setLoading, history));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"email\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Password!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n              loading={loading}\r\n            >\r\n              Log in\r\n            </Button>\r\n            &nbsp; &nbsp;{\" \"}\r\n            <Link style={{ color: \"white\" }} to=\"/auth/sineUp\">\r\n              Or register now!\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../../components/Auth/LoginForm';\r\nimport { PaddingContainer } from '../../styles/common';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <PaddingContainer>\r\n            <LoginForm/>\r\n        </PaddingContainer>\r\n    );\r\n};\r\n\r\nexport default Login;","import { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { createAccount } from \"../../../redux/actions/userAction\";\r\nimport { Container } from \"../../../styles/common\";\r\nimport { FormContainer } from \"../LoginForm/Login.styles\";\r\n\r\nconst SignUpForm = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    dispatch(createAccount(values, setLoading, history));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your name!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"name\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"email\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your password!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"confirm_password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your confirm_password!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"confirm_password\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n              loading={loading}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            &nbsp; &nbsp;{\" \"}\r\n            <Link style={{ color: \"white\" }} to=\"/auth/login\">\r\n              Or Log In!\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from 'react';\r\nimport SignUpForm from '../../components/Auth/SignUpForm';\r\nimport { PaddingContainer } from '../../styles/common';\r\n\r\nconst SignUp = () => {\r\n    return (\r\n        <PaddingContainer>\r\n            <SignUpForm/>\r\n        </PaddingContainer>\r\n    );\r\n};\r\n\r\nexport default SignUp","import styled from \"styled-components\";\r\nimport { device } from \"../../styles/variables/deviceBreakpoints\";\r\n\r\nexport const SinglePostContainer = styled.section`\r\n  & div {\r\n    padding: 20px;\r\n    & h1 {\r\n      font-size: 3rem;\r\n    }\r\n    & p {\r\n      color: black;\r\n    }\r\n    & img {\r\n      width: 100%;\r\n      height: 100%;\r\n      max-height: 80vw;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n  @media ${device.tablet} {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: lightgray;\r\n    & div {\r\n      flex-basis: 50%;\r\n    }\r\n  }\r\n  @media ${device.laptop} {\r\n    & div {\r\n      max-height: 30vw;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SinglePostContainer } from \"./SinglePost.styles\";\r\n\r\nconst SinglePost = ({\r\n  post: { categories, createdAt, disruption, image, title, userId },\r\n}) => {\r\n  return (\r\n    <SinglePostContainer>\r\n      <div>\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n      <div>\r\n        <h1>Title: {title}</h1>\r\n        <p>Catagories: {categories}</p>\r\n        <p>Author ID: {userId}</p>\r\n        <p>{disruption}</p>\r\n      </div>\r\n    </SinglePostContainer>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SinglePost from \"../../components/SinglePost/SinglePost\";\r\nimport { Container, PaddingContainer } from \"../../styles/common\";\r\n\r\nconst Post = () => {\r\n  const { id } = useParams();\r\n  const posts = useSelector((state) => state.posts);\r\n  const thisIdPost = posts.find((post) => post._id === id);\r\n  return (\r\n    <Container>\r\n      <PaddingContainer>\r\n        {thisIdPost && <SinglePost post={thisIdPost} />}\r\n      </PaddingContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Form, Input } from 'antd'\r\nimport { default as React } from 'react'\r\nconst FormItem = ({ name, label, help, required, message, prefix, placeholder, onBlur, value }) => {\r\n  return (\r\n    <Form.Item\r\n      label={label}\r\n      name={name}\r\n      help={help}\r\n      rules={[\r\n        {\r\n          required: required,\r\n          message: message,\r\n        },\r\n      ]}\r\n    >\r\n      <Input name={name} defaultValue={value} />\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default FormItem","import styled from \"styled-components\";\r\n\r\nexport const ImageInput = styled.div`\r\n  background-color: lightgreen;\r\n  display: inline-block;\r\n  margin-bottom: 20px;\r\n  & span {\r\n    padding-bottom: 5px;\r\n  }\r\n  & input {\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { ImageInput } from \"./ImgInput.styles\";\r\n\r\nconst ImgInput = ({ priviesImage, handelBlur }) => {\r\n  const [image, setImage] = useState(\"\");\r\n  const uploadImage = (img) => {\r\n    handelBlur({ image: \"\" });\r\n    let body = new FormData();\r\n    body.set(\"key\", \"df4598080cf75bed94d127b4e328aa24\");\r\n    body.append(\"image\", img);\r\n\r\n    return axios({\r\n      method: \"post\",\r\n      url: \"https://api.imgbb.com/1/upload\",\r\n      data: body,\r\n    });\r\n  };\r\n\r\n  const upload = (e) => {\r\n    uploadImage(e.target.files[0]).then((resp) => {\r\n      setImage(resp.data.data.image.url);\r\n      handelBlur({ image: resp.data.data.image.url });\r\n    });\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <ImageInput class=\"\">\r\n        <i class=\"fa fa-upload\" aria-hidden=\"true\"></i> &nbsp;\r\n        <span>Upload Post Image</span>\r\n        <input type=\"file\" class=\"upload\" onChange={upload} />\r\n      </ImageInput>\r\n      {(priviesImage || image) && (\r\n        <img\r\n          src={image || priviesImage}\r\n          height={200}\r\n          width={200}\r\n          style={{ objectFit: \"cover\", marginBottom: \"25px\", display: \"block\" }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgInput;\r\n","import { Button, Form, Input } from \"antd\";\r\nimport { React, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createPost } from \"../../redux/actions/postsAction\";\r\nimport FormItem from \"../Common/Inputs/FormItem\";\r\nimport ImgInput from \"../Common/Inputs/ImgInput\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst PostForm = ({ onClose }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [inputValue, setInputValue] = useState({});\r\n\r\n  const onFinish = (values) => {\r\n    setLoading(true);\r\n    dispatch(createPost({ ...values, ...inputValue }, setLoading, onClose));\r\n  };\r\n  const handelBlur = (input) => {\r\n    setInputValue(input);\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  return (\r\n    <div className=\"card bg-light rounded-lg\">\r\n      <div className=\"card-body\">\r\n        <div className=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8 mx-auto\">\r\n              <h2 className=\"mb-4\">\r\n                <strong>Create New Post</strong>\r\n              </h2>\r\n              <Form\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                  remember: false,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <ImgInput\r\n                  priviesImage={inputValue.image}\r\n                  handelBlur={handelBlur}\r\n                />\r\n\r\n                <FormItem name=\"title\" label=\"Post Title\" required={true} />\r\n\r\n                <FormItem name=\"categories\" label=\"Post Categories\" />\r\n\r\n                <FormItem name=\"disruption\" label=\"Post disruption\" rows={4} />\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    loading={loading}\r\n                    className=\"btn btn-outline-primary mb-1\"\r\n                    htmlType=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import { Button, Drawer } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport PostForm from \"../../PostForm/PostForm\";\r\n\r\nconst RightDrawer = ({content}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showDrawer}>\r\n        {content}\r\n      </Button>\r\n      <Drawer\r\n        title=\"Basic Drawer\"\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        visible={visible}\r\n        width= '70%'\r\n      >\r\n        <PostForm  onClose={onClose}/>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RightDrawer\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../styles/variables/deviceBreakpoints\";\r\n\r\nexport const NavbarContainer = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: lightgray;\r\n  padding: 20px 30px ;\r\n  @media ${device.tablet} {\r\n    padding: 20px 110px ;\r\n  }\r\n`;","import React from 'react';\r\nimport RightDrawer from '../Common/RightDrawer/RightDrawer';\r\nimport { NavbarContainer } from './Navbar.styles';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <NavbarContainer>\r\n            <h4>Post App</h4>\r\n            <RightDrawer content='Create Post'></RightDrawer>\r\n        </NavbarContainer>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import { Card } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst PostCard = ({ post: { image, title, _id } }) => {\r\n  return (\r\n    <Link to={`/post/${_id}`}>\r\n      <Card\r\n        hoverable\r\n        style={{\r\n          width: 240,\r\n          height: '100%',\r\n          boxShadow: \"0px 0px 10px lightgray\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src={image}\r\n            style={{ width: 240, height: 240, objectFit: \"cover\" }}\r\n          />\r\n        }\r\n      >\r\n        <h2>Title: {title}</h2>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostCardContainer = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 30px;\r\n  padding: 3rem 0;\r\n`;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostCard from \"./PostCard\";\r\nimport { PostCardContainer } from \"./PostCards.styles\";\r\n\r\nconst PostCards = () => {\r\n  const posts = useSelector((state) => state.posts);\r\n\r\n  return (\r\n    <>\r\n      <PostCardContainer>\r\n        {posts.map((post) => (\r\n          <PostCard post={post} key={post._id} />\r\n        ))}\r\n      </PostCardContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostCards;\r\n","import { React, useState } from \"react\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport PostCards from \"../../components/PostCards/PostCards\";\r\nimport { Container } from \"../../styles/common\";\r\n\r\nconst Posts = () => {\r\n  const [currentId, setCurrentId] = useState(0);\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Container>\r\n        <PostCards />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"../helpers/PrivateRoute\";\r\nimport LoginForm from \"../pages/Auth/Login\";\r\nimport SignUpForm from \"../pages/Auth/SignUp\";\r\nimport Post from \"../pages/Posts/Post\";\r\nimport Posts from \"../pages/Posts/Posts\";\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    Component: Posts,\r\n    exact: true,\r\n    ComponentRoute: PrivateRoute,\r\n  },\r\n  {\r\n    path: \"/posts\",\r\n    Component: Posts,\r\n    exact: true,\r\n    ComponentRoute: PrivateRoute,\r\n  },\r\n  {\r\n    path: \"/post/:id\",\r\n    Component: Post,\r\n    exact: true,\r\n    ComponentRoute: PrivateRoute,\r\n  },\r\n\r\n  // Auth Pages\r\n  {\r\n    path: \"/auth/login\",\r\n    Component: LoginForm,\r\n    exact: true,\r\n    ComponentRoute: Route,\r\n  },\r\n\r\n  {\r\n    path: \"/auth/sineUp\",\r\n    Component: SignUpForm,\r\n    exact: true,\r\n    ComponentRoute: Route,\r\n  },\r\n];\r\n\r\nconst mapStateToProps = ({ settings }) => ({\r\n  routerAnimation: settings.routerAnimation,\r\n});\r\n\r\nconst Router = () => {\r\n  return (\r\n    <>\r\n      {routes.map(({ path, Component, exact, ComponentRoute }) => (\r\n        <ComponentRoute path={path} key={path} exact={exact}>\r\n          <Component />\r\n        </ComponentRoute>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"./redux/actions/postsAction\";\r\nimport Router from \"./router\";\r\n\r\nconst App = () => {\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [currentId, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Router />\r\n      <NotificationContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { notification } from \"antd\";\r\nimport { SHOW_NOTIFICATION } from \"../actions/notificationsAction\";\r\n\r\nconst notificationState = {};\r\nconst key = \"updatable\";\r\n\r\nfunction notificationReducer(state = notificationState, action) {\r\n  const massageType = action?.payload?.massageType;\r\n  switch (action.type) {\r\n    case SHOW_NOTIFICATION:\r\n      notification[massageType]({\r\n        message: action.payload?.message,\r\n        description: action.payload?.description,\r\n      });\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default notificationReducer;\r\n","import { Add_LOGIN_USER, LOGOUT } from \"../actions/userAction\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userInfo: {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    isAdmin: false,\r\n  },\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Add_LOGIN_USER:\r\n      localStorage.setItem(\"profile\", JSON.stringify(action.payload));\r\n      return { ...state, ...action.payload };\r\n\r\n    case LOGOUT:\r\n      localStorage.setItem(\"profile\", JSON.stringify(null));\r\n      return {\r\n        ...action.payload,\r\n        token: null,\r\n      };\r\n    default:\r\n      const profile = JSON.parse(localStorage.getItem(\"profile\") || \"{}\");\r\n      return profile;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport notificationReducer from \"./notificationsReducer\";\r\nimport posts from \"./postsReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport const reducers = combineReducers({\r\n  posts,\r\n  notifications: notificationReducer,\r\n  user: userReducer,\r\n});\r\n","import {\r\n    CREATE_POST,\r\n    DELETE_POST,\r\n    FETCH_ALL_POST,\r\n    UPDATE_POST\r\n} from \"../actions/postsAction\";\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_POST:\r\n      return action.payload;\r\n    case CREATE_POST:\r\n      return [...posts, action.payload];\r\n    case UPDATE_POST:\r\n      return posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n    case DELETE_POST:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","import 'antd/dist/antd.css';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { reducers } from \"./redux/reducers\";\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}